{"version":3,"sources":["dispatcher.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;EAuBE;;;;;;;;;;;;AAEF,iCAAsC;AAEtC;;GAEG;AACH;IAAqC,mCAAY;IAAjD;;IAeA,CAAC;IAbG,sCAAsC;IAC/B,0CAAgB,GAAvB,UAAwB,KAAsB,EAAE,QAAkC;QAC9E,MAAM,CAAC,iBAAM,WAAW,YAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC9C,CAAC;IAED,sCAAsC;IAC/B,6CAAmB,GAA1B,UAA2B,KAAsB,EAAE,QAAkC;QACjF,MAAM,CAAC,iBAAM,cAAc,YAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC;IAEM,uCAAa,GAApB,UAAqB,SAA0B,EAAE,KAAW;QACxD,MAAM,CAAC,iBAAM,IAAI,YAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;IACL,sBAAC;AAAD,CAfA,AAeC,CAfoC,qBAAY,GAehD;AAfY,0CAAe","file":"dispatcher.js","sourcesContent":["/*\n* Web Bluetooth DFU\n* Copyright (c) 2018 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { EventEmitter } from \"events\";\n\n/**\n * @hidden\n */\nexport class EventDispatcher extends EventEmitter {\n\n    // tslint:disable-next-line:array-type\n    public addEventListener(event: string | symbol, listener: (...args: any[]) => void) {\n        return super.addListener(event, listener);\n    }\n\n    // tslint:disable-next-line:array-type\n    public removeEventListener(event: string | symbol, listener: (...args: any[]) => void) {\n        return super.removeListener(event, listener);\n    }\n\n    public dispatchEvent(eventType: string | symbol, event?: any) {\n        return super.emit(eventType, event);\n    }\n}\n"],"sourceRoot":"../src"}